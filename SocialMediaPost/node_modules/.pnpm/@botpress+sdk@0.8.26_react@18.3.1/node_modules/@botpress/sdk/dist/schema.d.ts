import { AnyZodObject } from '.pnpm/@botpress+sdk@0.8.26_react@18.3.1/node_modules/@botpress/sdk/dist/type-utils';
import type z from '.pnpm/@botpress+sdk@0.8.26_react@18.3.1/node_modules/@botpress/sdk/dist/zui';
type SchemaOptions<T> = {
    title: string;
    examples: T[];
};
type IsEmptyObject<T> = keyof T extends never ? true : false;
type UiDefinition<TSchema extends AnyZodObject = AnyZodObject> = IsEmptyObject<z.infer<TSchema>> extends true ? Record<string, never> : {
    [K in keyof z.infer<TSchema>]: Partial<SchemaOptions<z.infer<TSchema>[K]>>;
};
export type SchemaDefinition<TSchema extends AnyZodObject = AnyZodObject> = {
    schema: TSchema;
    /**
     * @deprecated
     * Use zod.Schema.displayAs() instead
     **/
    ui?: Partial<UiDefinition<TSchema>>;
};
export {};
