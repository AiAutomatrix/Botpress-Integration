"use strict";var we=Object.create;var F=Object.defineProperty;var Me=Object.getOwnPropertyDescriptor;var Ae=Object.getOwnPropertyNames;var Re=Object.getPrototypeOf,Ue=Object.prototype.hasOwnProperty;var H=(t,e)=>{for(var n in e)F(t,n,{get:e[n],enumerable:!0})},j=(t,e,n,a)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of Ae(e))!Ue.call(t,i)&&i!==n&&F(t,i,{get:()=>e[i],enumerable:!(a=Me(e,i))||a.enumerable});return t},m=(t,e,n)=>(j(t,e,"default"),n&&j(n,e,"default")),ee=(t,e,n)=>(n=t!=null?we(Re(t)):{},j(e||!t||!t.__esModule?F(n,"default",{value:t,enumerable:!0}):n,t)),ke=t=>j(F({},"__esModule",{value:!0}),t);var I={};H(I,{Bot:()=>_,BotSpecificClient:()=>A,Integration:()=>K,IntegrationDefinition:()=>C,IntegrationSpecificClient:()=>w,InterfaceDeclaration:()=>T,RuntimeError:()=>L.RuntimeError,botIdHeader:()=>U,botUserIdHeader:()=>W,configurationHeader:()=>k,integrationIdHeader:()=>J,interfaces:()=>$,isApiError:()=>L.isApiError,messages:()=>N,operationHeader:()=>D,parseBody:()=>b,serve:()=>O,studioComponentDefinitions:()=>te,typeHeader:()=>X,webhookIdHeader:()=>Q});module.exports=ke(I);var N={};H(N,{defaults:()=>q});var s={};H(s,{default:()=>o,studioComponentDefinitions:()=>te});var c=require("@bpinternal/zui");m(s,require("@bpinternal/zui"));var y=c.z.object({allowDynamicVariable:c.z.boolean().optional(),horizontal:c.z.boolean().optional()}),te={string:{text:{id:"text",params:y.extend({multiLine:c.z.boolean().optional(),growVertically:c.z.boolean().optional(),suggestions:c.z.array(c.z.string()).optional()})},dropdown:{id:"dropdown",params:y.extend({filterable:c.z.boolean().optional()})},radiogroup:{id:"radiogroup",params:y.extend({})},date:{id:"date",params:y.extend({dateFormat:c.z.string().optional(),minDate:c.z.string().optional(),maxDate:c.z.string().optional(),defaultTimezone:c.z.string().optional(),disableTimezoneSelection:c.z.boolean().optional(),highlightCurrentDay:c.z.boolean().optional(),showShortcutButtons:c.z.boolean().optional(),showOutsideDaysOfMonth:c.z.boolean().optional(),firstDayOfWeek:c.z.number().optional(),canChangeMonth:c.z.boolean().optional(),showWeekNumbers:c.z.boolean().optional()})},time:{id:"time",params:y.extend({useAMPM:c.z.boolean().optional(),timeFormat:c.z.string().optional(),minTime:c.z.string().optional(),maxTime:c.z.string().optional(),showArrowButtons:c.z.boolean().optional(),precision:c.z.enum(["minute","second","millisecond"]).optional()})},richtext:{id:"richtext",params:c.z.object({allowDynamicVariable:c.z.boolean().optional(),resizable:c.z.boolean().optional()})},json:{id:"json",params:y.extend({showPreview:c.z.boolean().optional(),showValidationError:c.z.boolean().optional()})},file:{id:"file",params:y.extend({fileTypes:c.z.array(c.z.enum(["image","audio","video"])).optional(),showUploadedFiles:c.z.boolean().optional()})}},number:{number:{id:"number",params:y.extend({allowNumericCharactersOnly:c.z.boolean().optional(),stepSize:c.z.number().optional()})},slider:{id:"slider",params:c.z.object({horizontal:c.z.boolean().optional(),stepSize:c.z.number().optional()})}},boolean:{switch:{id:"switch",params:y}},array:{options:{id:"options",params:y},strings:{id:"strings",params:y},daterange:{id:"daterange",params:c.z.object({dateFormat:c.z.string().optional(),minDate:c.z.string().optional(),maxDate:c.z.string().optional(),defaultTimezone:c.z.string().optional(),allowSingleDayRange:c.z.boolean().optional(),highlightCurrentDay:c.z.boolean().optional(),showOutsideDaysOfMonth:c.z.boolean().optional(),firstDayOfWeek:c.z.number().optional(),canChangeMonth:c.z.boolean().optional(),showWeekNumbers:c.z.boolean().optional()})}},object:{collapsible:{id:"collapsible",params:c.z.object({defaultOpen:c.z.boolean().optional()})},modal:{id:"modal",params:c.z.object({title:c.z.string().optional(),buttonLabel:c.z.string().optional(),closeButtonLabel:c.z.string().optional()})},popover:{id:"popover",params:c.z.object({buttonLabel:c.z.string().optional()})}},discriminatedUnion:{}},o=c.z;var h=s.z.string().min(1),se=s.z.object({text:h}),oe=s.z.object({markdown:h}),ie=s.z.object({imageUrl:h}),ae=s.z.object({audioUrl:h}),re=s.z.object({videoUrl:h}),ce=s.z.object({fileUrl:h,title:h.optional()}),le=s.z.object({latitude:s.z.number(),longitude:s.z.number(),address:s.z.string().optional(),title:s.z.string().optional()}),pe=s.z.object({title:h,subtitle:h.optional(),imageUrl:h.optional(),actions:s.z.array(s.z.object({action:s.z.enum(["postback","url","say"]),label:h,value:h}))}),ne=s.z.object({text:h,options:s.z.array(s.z.object({label:h,value:h}))}),De=s.z.object({items:s.z.array(pe)}),Oe=s.z.discriminatedUnion("type",[s.z.object({type:s.z.literal("text"),payload:se}),s.z.object({type:s.z.literal("markdown"),payload:oe}),s.z.object({type:s.z.literal("image"),payload:ie}),s.z.object({type:s.z.literal("audio"),payload:ae}),s.z.object({type:s.z.literal("video"),payload:re}),s.z.object({type:s.z.literal("file"),payload:ce}),s.z.object({type:s.z.literal("location"),payload:le})]),je=s.z.object({items:s.z.array(Oe)}),q={text:{schema:se},markdown:{schema:oe},image:{schema:ie},audio:{schema:ae},video:{schema:re},file:{schema:ce},location:{schema:le},carousel:{schema:De},card:{schema:pe},dropdown:{schema:ne},choice:{schema:ne},bloc:{schema:je}};var $={};H($,{creatable:()=>ze,deletable:()=>Ve,hitl:()=>Ke,listable:()=>Le,llm:()=>Ge,readable:()=>qe,updatable:()=>Ze});var ge=t=>Array.from(new Set(t)),B=t=>Object.entries(t);var S=(t,e)=>Object.fromEntries(B(t).map(([n,a])=>[n,e(a,n)]));var V=Symbol("schemaName"),de=t=>t?S(t,(n,a)=>({...n,[V]:a})):{},me=t=>t[V]!==void 0,ue=t=>t[V];var C=class{constructor(e){this.props=e;this.name=e.name,this.version=e.version,this.icon=e.icon,this.readme=e.readme,this.title=e.title,this.identifier=e.identifier,this.description=e.description,this.configuration=e.configuration,this.events=e.events,this.actions=e.actions,this.channels=e.channels,this.states=e.states,this.user=e.user,this.secrets=e.secrets,this.entities=e.entities}name;version;title;description;icon;readme;configuration;events;actions;channels;states;user;secrets;identifier;entities;interfaces={};clone(e){let n=new C({...this,...e});for(let[a,i]of Object.entries(this.interfaces))n.interfaces[a]=i;return n}extend(e,n){let a=n(de(this.entities)),i=B(a).find(([u,x])=>!me(x));if(i)throw new Error(`Cannot extend interface "${e.name}" with entity "${i[0]}"; the provided schema is not part of the integration's entities.`);let r=S(a,u=>({name:ue(u),schema:u.schema})),{resolved:l,implementStatement:d}=e.resolve({entities:r}),p=this;p.actions=this._mergeRecords(p.actions??{},l.actions),p.channels=this._mergeRecords(p.channels??{},l.channels),p.events=this._mergeRecords(p.events??{},l.events);let g=Object.values(r).map(u=>u.name),f=`${e.name}<${g.join(",")}>`;return this.interfaces[f]=d,this}_mergeRecords(e,n){let a=ge([...Object.keys(e),...Object.keys(n)]),i=e,r=n,l={};for(let d of a){let p=i[d],g=r[d];p&&g?l[d]={...p,...g}:l[d]=p??g}return l}};var T=class{constructor(e){this.props=e;this.name=e.name,this.version=e.version,this.entities=e.entities??{},this.events=e.events??{},this.actions=e.actions??{},this.channels=e.channels??{},this.templateName=e.templateName}name;version;entities;events;actions;channels;templateName;resolve(e){let{entities:n}=e,a={name:this.name,version:this.version,entities:S(n,p=>({name:p.name})),actions:{},events:{}},i={},r={},l={};for(let[p,g]of B(this.actions)){let f=this._dereference(g.input.schema,n),u=this._dereference(g.output.schema,n),x=this._rename(n,p);i[x]={input:{schema:f},output:{schema:u}},a.actions[p]={name:x}}for(let[p,g]of B(this.events)){let f=this._dereference(g.schema,n),u=this._rename(n,p);r[u]={schema:f},a.events[p]={name:u}}for(let[p,g]of B(this.channels)){let f={};for(let[u,x]of B(g.messages)){let z=this._dereference(x.schema,n);f[u]={schema:z}}l[p]={messages:f}}return{resolved:{actions:i,events:r,channels:l},implementStatement:a}}_dereference(e,n){let a={},i={};for(let[r,l]of B(n))a[r]=l.schema,i[r]=o.ref(r);return e(i).dereference(a)}_rename(e,n){if(!this.templateName)return n;let a=S(e,i=>i.name);return this.templateName(n,a)}};var Fe=o.object({id:o.string(),type:o.enum(["function"]),function:o.object({name:o.string(),arguments:o.record(o.any()).nullable().describe("Some LLMs may generate invalid JSON for a tool call, so this will be `null` when it happens.")})}),He=o.object({type:o.enum(["auto","specific","any","none",""]).optional(),functionName:o.string().optional().describe('Required if `type` is "specific"')}),he=o.object({role:o.enum(["user","assistant"]),type:o.enum(["text","tool_calls","tool_result","multipart"]).default("text"),toolCalls:o.array(Fe).optional().describe('Required if `type` is "tool_calls"'),toolResultCallId:o.string().optional().describe('Required if `type` is "tool_result"'),content:o.string().or(o.array(o.object({type:o.enum(["text","image"]),mimeType:o.string().optional().describe("Indicates the MIME type of the content. If not provided it will be detected from the content-type header of the provided URL."),text:o.string().optional().describe('Required if part type is "text" '),url:o.string().optional().describe('Required if part type is "image"')}))).optional().describe('Required unless `type` is "tool_call". If `type` is "multipart", this field must be an array of content objects. If `type` is "tool_result" then this field should be the result of the tool call (a plain string or a JSON-encoded array or object). If `type` is "tool_call" then the `toolCalls` field should be used instead.')}),Te=o.object({id:o.string()}),fe=t=>o.object({model:t.describe("Model to use for content generation"),systemPrompt:o.string().optional().describe("Optional system prompt to guide the model"),messages:o.array(he).describe("Array of messages for the model to process"),responseFormat:o.enum(["text","json_object"]).optional().describe('Response format expected from the model. If "json_object" is chosen, you must instruct the model to generate JSON either via the system prompt or a user message.'),maxTokens:o.number().optional().describe("Maximum number of tokens allowed in the generated response"),temperature:o.number().min(0).max(2).displayAs({id:"slider",params:{stepSize:.01,horizontal:!0}}).default(1).describe("Sampling temperature for the model. Higher values result in more random outputs."),topP:o.number().min(0).max(1).default(1).displayAs({id:"slider",params:{stepSize:.01,horizontal:!0}}).describe("Top-p sampling parameter. Limits sampling to the smallest set of tokens with a cumulative probability above the threshold."),stopSequences:o.array(o.string()).max(4).optional().describe("Sequences where the model should stop generating further tokens."),tools:o.array(o.object({type:o.literal("function"),function:o.object({name:o.string(),description:o.string().optional(),inputSchema:o.object({}).passthrough().optional()})})).optional(),toolChoice:He.optional(),userId:o.string().optional()}),Rt=fe(Te),Ne=o.object({id:o.string().describe("Response ID from LLM provider"),provider:o.string().describe("LLM provider name"),model:o.string().describe("Model name"),choices:o.array(he.omit({role:!0}).extend({role:o.literal("assistant"),index:o.number().int(),stopReason:o.enum(["stop","max_tokens","tool_calls","content_filter","other"])})),usage:o.object({inputTokens:o.number().int().describe("Number of input tokens used by the model"),inputCost:o.number().describe("Cost of the input tokens received by the model, in U.S. dollars"),outputTokens:o.number().int().describe("Number of output tokens used by the model"),outputCost:o.number().describe("Cost of the output tokens generated by the model, in U.S. dollars")})}),Ge=new T({name:"llm",version:"0.3.0",entities:{model:{schema:Te}},events:{},actions:{generateContent:{input:{schema:({model:t})=>fe(t)},output:{schema:()=>Ne}}}});var Ke=new T({name:"hitl",version:"0.0.1",entities:{},events:{},actions:{createUser:{input:{schema:()=>s.z.object({name:s.z.string().optional(),pictureUrl:s.z.string().optional(),email:s.z.string().optional()})},output:{schema:()=>s.z.object({userId:s.z.string()})}},openTicket:{input:{schema:()=>s.z.object({userId:s.z.string(),title:s.z.string(),description:s.z.string().optional()})},output:{schema:()=>s.z.object({conversationId:s.z.string()})}}},channels:{ticket:{messages:{text:{schema:()=>q.text.schema.extend({userId:s.z.string().optional().describe("Allows sending a message pretending to be a certain user")})}}}}});var v=o.object({id:o.string()}),E=t=>o.intersection(t,v),_e=t=>t[0].toUpperCase()+t.slice(1),R=(...t)=>{let[e,...n]=t.filter(a=>a.length>0).map(a=>a.toLowerCase());return e?[e,...n.map(_e)].join(""):""},ye=o.string().optional(),Le=new T({name:"listable",version:"0.0.1",entities:{item:{schema:v}},events:{},actions:{list:{input:{schema:()=>o.object({nextToken:ye})},output:{schema:t=>o.object({items:o.array(E(t.item)),meta:o.object({nextToken:ye})})}}},templateName:(t,e)=>R(e.item,t)}),ze=new T({name:"creatable",version:"0.0.1",entities:{item:{schema:v}},events:{created:{schema:t=>o.object({item:E(t.item)})}},actions:{create:{input:{schema:t=>o.object({item:t.item})},output:{schema:t=>o.object({item:E(t.item)})}}},templateName:(t,e)=>R(e.item,t)}),qe=new T({name:"readable",version:"0.0.1",entities:{item:{schema:v}},events:{},actions:{read:{input:{schema:()=>v},output:{schema:t=>o.object({item:E(t.item)})}}},templateName:(t,e)=>R(e.item,t)}),Ze=new T({name:"updatable",version:"0.0.1",entities:{item:{schema:v}},events:{updated:{schema:t=>o.object({item:E(t.item)})}},actions:{update:{input:{schema:t=>v.extend({item:t.item})},output:{schema:t=>o.object({item:E(t.item)})}}},templateName:(t,e)=>R(e.item,t)}),Ve=new T({name:"deletable",version:"0.0.1",entities:{item:{schema:v}},events:{deleted:{schema:()=>v}},actions:{delete:{input:{schema:()=>v},output:{schema:()=>o.object({})}}},templateName:(t,e)=>R(e.item,t)});var U="x-bot-id",W="x-bot-user-id",J="x-integration-id",Q="x-webhook-id",k="x-bp-configuration",D="x-bp-operation",X="x-bp-type";var be=require("node:http");var P=console;function b(t){if(!t.body)throw new Error("Missing body");return JSON.parse(t.body)}async function O(t,e=8072,n=Qe){let a=(0,be.createServer)(async(i,r)=>{try{let l=await $e(i);if(l.path==="/health"){r.writeHead(200).end("ok");return}let d=await t(l);r.writeHead(d?.status??200,d?.headers??{}).end(d?.body??"{}")}catch(l){P.error("Error while handling request",{error:l?.message??"Internal error occured"}),r.writeHead(500).end(JSON.stringify({error:l?.message??"Internal error occured"}))}});return a.listen(e,()=>n(e)),a}async function $e(t){let e=await Je(t),n={};for(let i=0;i<t.rawHeaders.length;i+=2){let r=t.rawHeaders[i].toLowerCase(),l=t.rawHeaders[i+1];n[r]=l}let a=new URL(t.url??"",t.headers.host?`http://${t.headers.host}`:"http://botpress.cloud");return{body:e,path:a.pathname,query:We(a.search,"?"),headers:n,method:t.method?.toUpperCase()??"GET"}}function We(t,e){return t.indexOf(e)===0?t.slice(e.length):t}async function Je(t){return new Promise((e,n)=>{if(t.method!=="POST"&&t.method!=="PUT"&&t.method!=="PATCH")return e(void 0);let a="";t.on("data",i=>a+=i.toString()),t.on("error",i=>n(i)),t.on("end",()=>e(a))})}function Qe(t){P.info(`Listening on port ${t}`)}m(I,s,module.exports);var L=require("@botpress/client");var Ie=require("@bpinternal/zui");var Xe=Ie.z.enum(["webhook_received","message_created","action_triggered","register","unregister","ping","create_user","create_conversation"]),ve=t=>{let e=t[U],n=t[W],a=t[J],i=t[Q],r=t[k],l=Xe.parse(t[D]);if(!e)throw new Error("Missing bot headers");if(!n)throw new Error("Missing bot user headers");if(!a)throw new Error("Missing integration headers");if(!i)throw new Error("Missing webhook headers");if(!r)throw new Error("Missing configuration headers");if(!l)throw new Error("Missing operation headers");return{botId:e,botUserId:n,integrationId:a,webhookId:i,operation:l,configuration:r?JSON.parse(Buffer.from(r,"base64").toString("utf-8")):{}}};var M=require("@botpress/client");var w=class{constructor(e){this.client=e}createConversation=e=>this.client.createConversation(e);getConversation=e=>this.client.getConversation(e);listConversations=e=>this.client.listConversations(e);getOrCreateConversation=e=>this.client.getOrCreateConversation(e);updateConversation=e=>this.client.updateConversation(e);deleteConversation=e=>this.client.deleteConversation(e);listParticipants=e=>this.client.listParticipants(e);addParticipant=e=>this.client.addParticipant(e);getParticipant=e=>this.client.getParticipant(e);removeParticipant=e=>this.client.removeParticipant(e);createEvent=e=>this.client.createEvent(e);getEvent=e=>this.client.getEvent(e);listEvents=e=>this.client.listEvents(e);createMessage=e=>this.client.createMessage(e);getOrCreateMessage=e=>this.client.getOrCreateMessage(e);getMessage=e=>this.client.getMessage(e);updateMessage=e=>this.client.updateMessage(e);listMessages=e=>this.client.listMessages(e);deleteMessage=e=>this.client.deleteMessage(e);createUser=e=>this.client.createUser(e);getUser=e=>this.client.getUser(e);listUsers=e=>this.client.listUsers(e);getOrCreateUser=e=>this.client.getOrCreateUser(e);updateUser=e=>this.client.updateUser(e);deleteUser=e=>this.client.deleteUser(e);getState=e=>this.client.getState(e);setState=e=>this.client.setState(e);getOrSetState=e=>this.client.getOrSetState(e);patchState=e=>this.client.patchState(e);configureIntegration=e=>this.client.configureIntegration(e);uploadFile=e=>this.client.uploadFile(e);upsertFile=e=>this.client.upsertFile(e);deleteFile=e=>this.client.deleteFile(e);listFiles=e=>this.client.listFiles(e);getFile=e=>this.client.getFile(e);updateFileMetadata=e=>this.client.updateFileMetadata(e)};var Y=ee(require("util")),G=t=>{if(process.env.BP_LOG_FORMAT==="json")return JSON.stringify({msg:Y.default.format(...t),visible_to_bot_owner:!0});{let[e,...n]=t;return Y.default.format(`[For Bot Owner] ${e}`,...n)}},Be={forBot:()=>({info:(...t)=>{console.info(G(t))},warn:(...t)=>{console.warn(G(t))},error:(...t)=>{console.error(G(t))},debug:(...t)=>{console.debug(G(t))}})};var xe=t=>async e=>{let n=ve(e.headers),a=new w(new M.Client({botId:n.botId,integrationId:n.integrationId})),i={ctx:n,req:e,client:a,logger:Be,instance:t};try{let r;switch(n.operation){case"webhook_received":r=await et(i);break;case"register":r=await tt(i);break;case"unregister":r=await nt(i);break;case"message_created":r=await it(i);break;case"action_triggered":r=await at(i);break;case"ping":r=await Ye(i);break;case"create_user":r=await st(i);break;case"create_conversation":r=await ot(i);break;default:throw new Error(`Unknown operation ${n.operation}`)}return r?{...r,status:r.status??200}:{status:200}}catch(r){if((0,M.isApiError)(r)){let l=new M.RuntimeError(r.message,r);return{status:l.code,body:JSON.stringify(l.toJSON())}}throw r}},Ye=async t=>{},et=async({client:t,ctx:e,req:n,logger:a,instance:i})=>{let{req:r}=b(n);return i.webhook({client:t,ctx:e,req:r,logger:a})},tt=async({client:t,ctx:e,req:n,logger:a,instance:i})=>{if(!i.register)return;let{webhookUrl:r}=b(n);await i.register({client:t,ctx:e,webhookUrl:r,logger:a})},nt=async({client:t,ctx:e,req:n,logger:a,instance:i})=>{if(!i.unregister)return;let{webhookUrl:r}=b(n);await i.unregister({ctx:e,webhookUrl:r,client:t,logger:a})},st=async({client:t,ctx:e,req:n,logger:a,instance:i})=>{if(!i.createUser)return;let{tags:r}=b(n);return await i.createUser({ctx:e,client:t,tags:r,logger:a})},ot=async({client:t,ctx:e,req:n,logger:a,instance:i})=>{if(!i.createConversation)return;let{channel:r,tags:l}=b(n);return await i.createConversation({ctx:e,client:t,channel:r,tags:l,logger:a})},it=async({ctx:t,req:e,client:n,logger:a,instance:i})=>{let{conversation:r,user:l,type:d,payload:p,message:g}=b(e),f=i.channels[r.channel];if(!f)throw new Error(`Channel ${r.channel} not found`);let u=f.messages[d];if(!u)throw new Error(`Message of type ${d} not found in channel ${r.channel}`);await u({ctx:t,conversation:r,message:g,user:l,type:d,client:n,payload:p,ack:async({tags:z})=>{await n.updateMessage({id:g.id,tags:z})},logger:a})},at=async({req:t,ctx:e,client:n,logger:a,instance:i})=>{let{input:r,type:l}=b(t);if(!l)throw new Error("Missing action type");let d=i.actions[l];if(!d)throw new Error(`Action ${l} not found`);let p=await d({ctx:e,input:r,client:n,type:l,logger:a});return{body:JSON.stringify({output:p})}};var K=class{props;actions;channels;register;unregister;createUser;createConversation;webhook;constructor(e){this.props=e,this.actions=e.actions,this.channels=e.channels,this.register=e.register,this.unregister=e.unregister,this.createUser=e.createUser,this.createConversation=e.createConversation,this.webhook=e.handler}handler=xe(this);start=e=>O(this.handler,e)};var Ee=ee(require("@botpress/client"));var A=class{constructor(e){this.client=e}getConversation=e=>this.client.getConversation(e);listConversations=e=>this.client.listConversations(e);updateConversation=e=>this.client.updateConversation(e);deleteConversation=e=>this.client.deleteConversation(e);listParticipants=e=>this.client.listParticipants(e);addParticipant=e=>this.client.addParticipant(e);getParticipant=e=>this.client.getParticipant(e);removeParticipant=e=>this.client.removeParticipant(e);getEvent=e=>this.client.getEvent(e);listEvents=e=>this.client.listEvents(e);createMessage=e=>this.client.createMessage(e);getOrCreateMessage=e=>this.client.getOrCreateMessage(e);getMessage=e=>this.client.getMessage(e);updateMessage=e=>this.client.updateMessage(e);listMessages=e=>this.client.listMessages(e);deleteMessage=e=>this.client.deleteMessage(e);getUser=e=>this.client.getUser(e);listUsers=e=>this.client.listUsers(e);updateUser=e=>this.client.updateUser(e);deleteUser=e=>this.client.deleteUser(e);getState=e=>this.client.getState(e).then(n=>({state:{...n.state,payload:n.state.payload}}));setState=e=>this.client.setState(e).then(n=>({state:{...n.state,payload:n.state.payload}}));getOrSetState=e=>this.client.getOrSetState(e).then(n=>({state:{...n.state,payload:n.state.payload}}));patchState=e=>this.client.patchState(e).then(n=>({state:{...n.state,payload:n.state.payload}}));callAction=e=>this.client.callAction(e);uploadFile=e=>this.client.uploadFile(e);upsertFile=e=>this.client.upsertFile(e);deleteFile=e=>this.client.deleteFile(e);listFiles=e=>this.client.listFiles(e);getFile=e=>this.client.getFile(e);updateFileMetadata=e=>this.client.updateFileMetadata(e);searchFiles=e=>this.client.searchFiles(e);createConversation=e=>this.client.createConversation(e);getOrCreateConversation=e=>this.client.getOrCreateConversation(e);createUser=e=>this.client.createUser(e);getOrCreateUser=e=>this.client.getOrCreateUser(e)};var Se=require("@bpinternal/zui");var rt=Se.z.enum(["event_received","register","unregister","ping","action_triggered"]),Ce=t=>{let e=t[U],n=t[k],a=t[X],i=rt.parse(t[D]);if(!e)throw new Error("Missing bot headers");if(!a)throw new Error("Missing type headers");if(!n)throw new Error("Missing configuration headers");if(!i)throw new Error("Missing operation headers");return{botId:e,operation:i,type:a,configuration:n?JSON.parse(Buffer.from(n,"base64").toString("utf-8")):{}}};var Pe=t=>async e=>{let n=Ce(e.headers);n.operation!=="ping"&&P.info(`Received ${n.operation} operation for bot ${n.botId} of type ${n.type}`);let a=new A(new Ee.Client({botId:n.botId})),i={req:e,ctx:n,client:a,instance:t};switch(n.operation){case"action_triggered":throw new Error(`Operation ${n.operation} not supported yet`);case"event_received":await gt(i);break;case"register":await lt(i);break;case"unregister":await pt(i);break;case"ping":await ct(i);break;default:throw new Error(`Unknown operation ${n.operation}`)}return{status:200}},ct=async t=>{},lt=async t=>{},pt=async t=>{},gt=async({ctx:t,req:e,client:n,instance:a})=>{P.debug(`Received event ${t.type}`);let i=b(e),r=i.event;switch(t.type){case"message_created":let l={user:r.payload.user,conversation:r.payload.conversation,message:r.payload.message,states:r.payload.states,event:r};await Promise.all(a.messageHandlers.map(g=>g({client:n,ctx:t,...l})));break;case"state_expired":let d={state:r.payload.state};await Promise.all(a.stateExpiredHandlers.map(g=>g({client:n,ctx:t,...d})));break;default:let p={event:i.event};await Promise.all(a.eventHandlers.map(g=>g({client:n,ctx:t,...p})))}};var _=class{_state={messageHandlers:[],eventHandlers:[],stateExpiredHandlers:[]};props;constructor(e){this.props=e}message=e=>{this._state.messageHandlers.push(e)};event=e=>{this._state.eventHandlers.push(e)};stateExpired=e=>{this._state.stateExpiredHandlers.push(e)};handler=Pe(this._state);start=e=>O(this.handler,e)};0&&(module.exports={Bot,BotSpecificClient,Integration,IntegrationDefinition,IntegrationSpecificClient,InterfaceDeclaration,RuntimeError,botIdHeader,botUserIdHeader,configurationHeader,integrationIdHeader,interfaces,isApiError,messages,operationHeader,parseBody,serve,studioComponentDefinitions,typeHeader,webhookIdHeader});
//# sourceMappingURL=index.js.map
