export interface ListPublicWorkspacesRequestHeaders {
}
export interface ListPublicWorkspacesRequestQuery {
    nextToken?: string;
    workspaceIds?: string[];
    search?: string;
}
export interface ListPublicWorkspacesRequestParams {
}
export interface ListPublicWorkspacesRequestBody {
}
export type ListPublicWorkspacesInput = ListPublicWorkspacesRequestBody & ListPublicWorkspacesRequestHeaders & ListPublicWorkspacesRequestQuery & ListPublicWorkspacesRequestParams;
export type ListPublicWorkspacesRequest = {
    headers: ListPublicWorkspacesRequestHeaders;
    query: ListPublicWorkspacesRequestQuery;
    params: ListPublicWorkspacesRequestParams;
    body: ListPublicWorkspacesRequestBody;
};
export declare const parseReq: (input: ListPublicWorkspacesInput) => ListPublicWorkspacesRequest & {
    path: string;
};
export interface ListPublicWorkspacesResponse {
    workspaces: GetPublicWorkspaceResponse[];
    meta: {
        /**
         * The token to use to retrieve the next page of results, passed as a query string parameter (value should be URL-encoded) to this API endpoint.
         */
        nextToken?: string;
    };
}
export interface GetPublicWorkspaceResponse {
    id: string;
    name: string;
    createdAt: string;
    updatedAt: string;
    about?: string;
    profilePicture?: string;
    contactEmail?: string;
    website?: string;
    socialAccounts?: string[];
    handle?: string;
}
